namespace Euler.Problems
{
    public class Problem12 : IProblem
    {
        public string Title => "Highly divisible triangular number";

        public string Description => @"The sequence of triangle numbers is generated by adding the natural numbers.So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?";

        public string GetSolution()
        {
            var n = 1;
            while (true)
            {

                long t = 0;
                for (var x = 1; x <= n; x++) t += x;

                if (GetDivisorsNumber(t) > 500) return t.ToString();

                n++;
            }
        }

        private int GetDivisorsNumber(long val)
        {
            long d = 1;
            var count = val == 1 ? 0 : 1; //val itself

            while (d <= val / 2)
            {
                if (val % d == 0) count++;
                d++;
            }
            return count;
        }
    }
}
